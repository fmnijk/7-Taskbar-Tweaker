官網重點
    TTLib
        7+ Taskbar Tweaking Library
        https://ramensoftware.com/7-taskbar-tweaking-library

官網
    https://ramensoftware.com/7-taskbar-tweaker

網址
    https://tweaker.userecho.com/communities/1/topics/110-order-lost-when-updating#comment-6233
    https://ramensoftware.com/7-taskbar-tweaker/comment-page-54?replytocom=15015#respond
    https://ramensoftware.com/contact
    https://github.com/m417z/7-Taskbar-Tweaker

lpArray有多種問題要處理:
    task_group可為0
    lpArray項目可重複(通常是Explorer自身)
lpArray_HWND1.txt過濾掉兩者後可得lpArray_HWND2.txt

//Windows
//上改成下
C:\Users\user\AppData\Roaming\7+ Taskbar Tweaker\lpArray_HWND1.txt
C:/Users/user/AppData/Roaming/7+ Taskbar Tweaker/lpArray_HWND1.txt

安全函數修改:
    swprintf_s():
    swprintf()  : 不安全，應該使用 _snwprintf_s() [要加_TRUNCATE參數]
    snprintf_s():
    snprintf()  : 不安全，應該使用 _snprintf_s() [要加_TRUNCATE參數]
    _wfopen()   : 相對安全，但可以考慮使用 _wfopen_s()
    fprintf()   : 不安全，應該使用 fprintf_s()
    swscanf()   : 不安全，應該使用 swscanf_s()
    sscanf()    : 不安全，應該使用 sscanf_s()
    fgetws()    : 需要指定最大長度，基本安全
    fgets()     : 需要指定最大長度，基本安全
    fputs()     : 基本安全
    strcpy_s()  :
    wsprintf()  :

_wfopen改用_wfopen_s
fgets改用fgets_s
sscanf_s

_snwprintf_s改用wsprintf
strcpy_s改用strcpy
fprintf_s改用fprintf

已知問題:
    設定成不分組時，重啟7+或Explorer時，只有目前的桌面會變成不分組，虛擬桌面不會變成不分組
        https://tweaker.userecho.com/communities/1/topics/310-some-options-eg-grouping-dont-apply-immediately-for-windows-in-different-virtual-desktops-in?redirect_to_reply=7650#comment-7650

修改1 /utf-8
    dll和exe專案屬性>[C/C++]>[命令列]添加/utf-8參數
修改2 GetTickCount() -> GetTickCount64()
    //上改成下
    static DWORD a;
    static ULONGLONG a;
    //上改成下
    a = GetTickCount();
    a = GetTickCount64();
    //上改成下
    wsprintf(a, L"%u", GetTickCount64());
    wsprintf(a, L"%llu", GetTickCount64());
    //上改成下
    DWORD a(){}
    ULONGLONG a(){}
修改3 消除變數未初始化警告
修改4 消除正在取值 NULL 指標警告
修改5 消除找不到函式定義警告
    消除"找不到 'ManipulateUserPreferences' 的函式定義。"警告 (前向宣告的參數類型不匹配)
修改6 int -> size_t
    int改成size_t
    並移除型別轉換(size_t)a
修改7 檔案總管重啟後可透過操作還原工作列順序
    com_func_hook.c
    stdafx.h

不能修改1 else if(TaskbarGetPreference(lpTaskListLongPtr) & 0x200 || TaskbarGetPreference(lpTaskListLongPtr) & 0x400)
    改成0x200時virtual_desktop_order_fix也有效果
    但這麼做時拖動副工作列的button會破壞lpArray順序影響主工作列
    因為0x200時主副工作列的button在lpArray中是共用的
    所以只能以主工作列為主

TaskbarMoveGroup

RefreshTaskbarHardcore
SetOptions

LRESULT OnCommand(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, DLG_PARAM *pDlgParam)
SendOptionsMessage(ExplorerGetTaskbarWnd(), hWnd, pDlgParam->nOptions);

目前的限制:
    1.不分組 (不分組時，修復工作列順序並切換虛擬桌面後，工作列順序和lpArray才會完全相符)
    2.手動調整工作列順序 (觸發OnButtonGroupInserted修復工作列順序)
    3.切換虛擬桌面 (切換虛擬桌面時，Explorer會重新渲染工作列，此時才能反應lpArray的變化)
檔案總管重啟後修復步驟:
    1.切換成不分組讓她們可以自由活動
    2.切換虛擬桌面讓她們符合lpArray的順序
    3.手動調整工作列順序觸發修復
    4.再次切換虛擬桌面讓她們符合lpArray修復後的順序
    5.切換回按程式ID分組

腳本還在開發測試階段，工作列順序暫定永久保存到txt檔並備份

FUNC_CWindowTaskItem_GetWindow

    DPA_InsertPtrHook Windows程式在DPA動態指針陣列中加入指針時觸發
    ComFuncVirtualDesktopFixAfterDPA_InsertPtr 手動調整工作列順序時觸發
    OnButtonGroupInserted 手動調整工作列順序時觸發
virtual_desktop_order_fix
    OPT_EX_VIRTUAL_DESKTOP_ORDER_FIX
Drag within/between groups using right mouse button
    OPT_GROUPING_RIGHTDRAG
drag to reorder
    OPT_THUMB_REORDER

Visual Studio使用UTF-8:
    /utf-8可立即改
        https://learn.microsoft.com/zh-tw/cpp/build/reference/utf-8-set-source-and-executable-character-sets-to-utf-8?view=msvc-170
    預設編碼要等到17.13 Preview 1才能改
        https://learn.microsoft.com/en-us/visualstudio/ide/how-to-save-and-open-files-with-encoding?view=vs-2022


static void OnButtonGroupInserted(LONG_PTR lpMMTaskListLongPtr, int nButtonGroupIndex)

else if(nOptions[OPT_GROUPING_OPENNEAR] == 1)
    ComFuncMoveNearMatching(hButtonWnd);

void ComFuncMoveNearMatching(HWND hButtonWnd)
static BOOL MMMoveNearMatching(LONG_PTR lpMMTaskListLongPtr, HWND hButtonWnd)

使用者調整button_groups時explorer不會跟著調整lpArray
切換虛擬桌面會把button_groups變成跟lpArray一樣的排序，因為按鈕消失了，按鈕回來時它只好按造lpArray的順序排序
所以切換虛擬桌面button_groups會變回來，因為lpArray不會改變
7+的原理就是讓lpArray會跟著button_groups一起調整
所以切換虛擬桌面時button_groups變成跟lpArray一樣的排序也無所謂，因為兩個已經是一樣的了

總之7+會讓button_groups變成跟lpArray一樣的排序
Explorer重啟會重排button_groups和lpArray，兩個排序還不一樣
所以Explorer重啟會重排button_groups
切換虛擬桌面又會再次重啟button_groups
因為7+還沒有同步button_groups和lpArray

保存到txt文件中
保存到註冊表中
保存到exe記憶體中(不能保存到dll記憶體中，重啟explorer會丟失數據)

是否需要在      7+啟動時保存taskbar_order0~2.txt
是否需要在explorer啟動時保存taskbar_order0~2.txt

Explorer會卡死:
    lpArray可以調整順序，但原本有哪些調整順序後也要一模一樣，不能有多有少

新點子:
    可以每次觸發修復排序時都備份reg到reg或txt

Windows 11:
    https://windhawk.net

要顯示警告:
    設定警告層級/Wall (顯示所有警告)
    '<': signed/unsigned 不相符
    將 'type1' 轉換為 'type2'，資料可能遺失
    #pragma warning(default:4388) https://learn.microsoft.com/zh-tw/cpp/error-messages/compiler-warnings/c4388?view=msvc-170
    #pragma warning(default:4244) https://learn.microsoft.com/zh-tw/cpp/error-messages/compiler-warnings/compiler-warning-levels-3-and-4-c4244?view=msvc-170
要隱藏警告:
    #pragma warning(disable:4711)

改用lpArray備份hwnd順序取代button_groups
    本來是從button_groups讀取hwnd順序備份到reg中
    但button_groups還要考慮虛擬桌面的問題，步驟較複雜導致有bug
    所以改用lpArray，因為lpArray是全局的，唯一的

已知問題:
    問題1:
        如果修改工作列順序時拖曳的是Windows設定
        lpArray的其他項目皆會變成無效項目
        所以請不要修改Windows設定在工作列中的順序
    問題2:
        開啟新視窗時
        不一定會觸發OnButtonGroupInserted
        所以需要時不時調整工作列順序
        觸發OnButtonGroupInserted來備份工作列順序
        不然沒辦法100%恢復工作列順序

已知條件:
    lpArray永遠是同一個
    不論是否為0x400
    不論是否拖曳的是Windows設定
